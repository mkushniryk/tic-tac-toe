{"version":3,"sources":["components/Cell/Cell.js","components/Board/Board.js","components/GameButton/GameButton.js","components/Game/Game.js","index.js"],"names":["Cell","props","useState","isClicked","setIsClicked","isHover","setIsHover","mark","setMark","handleHover","hover","isEnd","next","className","classes","join","onClick","number","onMouseEnter","onMouseLeave","Board","generateClasses","position","length","pos","push","gridStyle","gridTemplate","Math","sqrt","square","style","len","squares","i","renderCells","GameButton","class","type","data-toggle","aria-haspopup","aria-expanded","calculateWinner","lines","lineLen","arr","j","buildWinPositions","positions","res","forEach","cell","Game","Array","fill","history","setHistory","historyState","setHistoryState","xIsNext","setXIsNext","isGameOver","setIsGameOver","getStatus","console","log","winner","hist","slice","concat","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.307a769a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Cell.css\";\r\n\r\nfunction Cell(props) {\r\n\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [isHover, setIsHover] = useState(false);\r\n  const [mark, setMark] = useState(null);\r\n\r\n  function handleClick(number) {\r\n    if (props.isEnd() || isClicked) return;\r\n\r\n    setIsClicked(!isClicked);\r\n    setIsHover(false);\r\n    setMark(props.next() ? 'x' : 'o');\r\n\r\n    props.onClick(number);\r\n  }\r\n\r\n    function handleHover(hover){\r\n      if (props.isEnd() || isClicked) return;\r\n\r\n      setIsHover(hover);\r\n      setMark(props.next() ? 'x' : 'o');\r\n    }\r\n\r\n    function renderMark() {\r\n        return (\r\n            <div className={'mark mark-' + (mark) + (isClicked ? ' mark-clicked' : isHover ? ' mark-hover' : '')}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={'cell' + (' ' + props.classes.join(' '))}\r\n        onClick={() => handleClick(props.number)}\r\n        onMouseEnter={() => handleHover(true)}\r\n        onMouseLeave={() => handleHover(false)}\r\n      >\r\n        {renderMark()}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport Cell from '../Cell/Cell';\r\nimport \"./Board.css\";\r\n\r\nfunction Board(props) {\r\n\r\n    function renderCell(number, classes) {\r\n        return (<Cell\r\n                classes = {classes}\r\n                number = {number}\r\n                next = {() => props.next()}\r\n                isEnd = {() => props.isEnd()}\r\n                onClick = {(i) => props.onClick(i)}\r\n            />);\r\n    }\r\n\r\n    function renderCells() {\r\n        var len = Math.sqrt(props.square.length);\r\n        const squares = [];\r\n        for (let i = 0; i < props.square.length; i++)\r\n            squares.push(renderCell(i, generateClasses(i + 1, len)));\r\n        return squares;\r\n    }\r\n\r\n    function generateClasses(position, length) {\r\n        var classes = [];\r\n        var pos = (position) % length;\r\n        if (pos === 1) classes.push('cell-left');\r\n        if (pos === 0) classes.push('cell-right');\r\n        if (position <= length) classes.push('cell-top');\r\n        if (position > (length * (length - 1))) classes.push('cell-bottom');\r\n        return classes;\r\n    }\r\n\r\n    const gridStyle = {\r\n        gridTemplate: 'repeat(' + Math.sqrt(props.square.length) + ', min-content) / repeat(' + Math.sqrt(props.square.length) + ', min-content)'\r\n    };\r\n\r\n    return (\r\n        <div className=\"board\" style={gridStyle}>\r\n            {renderCells()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React, { useState } from 'react';\r\nimport './GameButton.css'\r\n\r\nfunction GameButton(props) {\r\n\r\n    function renderMenuItems() {\r\n\r\n    }\r\n\r\n    return (\r\n        <div class=\"btn-group\">\r\n            <button type=\"button\" class=\"btn btn-secondary newgame\">NEW GAME 3Ð¥3</button>\r\n            <button type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split newgame\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <span class=\"sr-only\">Toggle Dropdown</span>\r\n            </button>\r\n        <div class=\"dropdown-menu\">\r\n          <a class=\"dropdown-item\">NEW GAME 3X3</a>\r\n          <a class=\"dropdown-item\">NEW GAME 4X4</a>\r\n          <a class=\"dropdown-item\">NEW GAME 5X5</a>\r\n          {/* <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" href=\"#\">Separated link</a> */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default GameButton;","import React, { useState } from 'react';\r\nimport Board from '../Board/Board';\r\nimport GameButton from '../GameButton/GameButton';\r\nimport \"./Game.css\";\r\n\r\nfunction Game(props) {\r\n\r\n    const [history, setHistory] = useState([{\r\n        square: Array(9).fill(null)\r\n    }]);\r\n    const [historyState, setHistoryState] = useState(0);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [isGameOver, setIsGameOver] = useState(false);\r\n    \r\n\r\n    function next() {\r\n        return xIsNext;\r\n    }\r\n\r\n    function isOver() {\r\n        return isGameOver;\r\n    }\r\n\r\n    function handleClick(i) {\r\n        const hist = history.slice(0, historyState + 1);\r\n        const current = hist[hist.length - 1];\r\n        const square = current.square.slice();\r\n\r\n        // var win = calculateWinner(squares);\r\n        // if (win) {\r\n        //     console.log('WINNER SUKA ' + win);\r\n        //     this.setState({\r\n        //         isEnd: true\r\n        //     });\r\n        // }\r\n\r\n        // if (this.state.isEnd || squares[i]) {\r\n        //     return;\r\n        // }\r\n        square[i] = xIsNext ? 'X' : 'O';\r\n        setHistory(hist.concat({\r\n            square: square\r\n        }));\r\n        setHistoryState(hist.length);\r\n        setXIsNext(!xIsNext);\r\n\r\n        var win = calculateWinner(square);\r\n        if (win) {\r\n            setIsGameOver(true);\r\n        }\r\n\r\n        if (isGameOver || square[i]) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    function getStatus() {\r\n        console.log('HISTORY')\r\n        console.log(history);\r\n        console.log(history[0]);\r\n        const winner = calculateWinner(history[historyState].square);\r\n        return winner ? 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='header'>\r\n                <h1 className='title'>TIC TAC TOE</h1>\r\n            </div>\r\n            <div>{getStatus()}</div>\r\n            <Board\r\n                square={history[historyState].square}\r\n                next={() => next()}\r\n                onClick={(i) => handleClick(i)}\r\n                isEnd={() => isOver()}\r\n            />\r\n            <div>{getStatus()}</div>\r\n            <div class=\"endgame\">\r\n                <span class=\"msg msg--o-win\">You lost to a stylesheet!</span>\r\n                <span class=\"msg msg--draw\">Draw!</span>\r\n                <button class=\"endgame-newgame\" type=\"reset\">Try again</button>\r\n            </div>\r\n    \r\n            <div class=\"bar\">\r\n                <GameButton/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(square) {\r\n\r\n    const lines = buildWinPositions(square)\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const positions = lines[i];\r\n        var res = true;\r\n        positions.forEach(cell => {\r\n            res = res && (square[cell] === square[0]);\r\n        });\r\n        if (square[0] && res) return square[0];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction buildWinPositions(square) {\r\n    const lineLen = Math.sqrt(square.length);\r\n    const lines = [];\r\n    \r\n    for (let i = 0; i < square.length; i += lineLen) {\r\n        var arr = [];\r\n        for (let j = i; j < i + lineLen; j++) {\r\n            arr.push(j);\r\n        }\r\n        lines.push(arr);\r\n    }\r\n\r\n    for (let i = 0; i < lineLen; i++) {\r\n        var arr = [];\r\n        for (let j = i; j < square.length; j += lineLen) {\r\n            arr.push(j);\r\n        }\r\n        lines.push(arr);\r\n    }\r\n\r\n    var arr = [];\r\n    for (let i = 0; i < square.length; i += lineLen + 1) {\r\n        arr.push(i);\r\n    }\r\n    lines.push(arr);\r\n\r\n    arr = [];\r\n    for (let i = lineLen - 1; i < square.length; i += lineLen - 1) {\r\n        arr.push(i);\r\n        if (arr.length == lineLen) {\r\n            break;\r\n        }\r\n    }\r\n    lines.push(arr);\r\n\r\n    return lines;\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game/Game';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}