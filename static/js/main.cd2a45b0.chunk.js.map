{"version":3,"sources":["components/Cell/Cell.js","components/Board/Board.js","components/Game/Game.js","index.js"],"names":["Cell","props","useState","isClicked","setIsClicked","isHover","setIsHover","mark","setMark","handleHover","hover","xIsNext","next","className","classes","join","onClick","number","value","handleClick","onMouseEnter","onMouseLeave","Board","generateClasses","position","length","pos","push","gridStyle","gridTemplate","Math","sqrt","square","style","len","squares","i","renderCells","Game","state","history","Array","fill","historyState","this","slice","lines","a","b","c","calculateWinner","setState","concat","current","class","type","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd2a45b0.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport \"./Cell.css\";\r\n\r\nfunction Cell(props) {\r\n\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const [isHover, setIsHover] = useState(false);\r\n    const [mark, setMark] = useState(null);\r\n\r\n    function handleClick(number) {\r\n        if (!(props.value === null)) return;\r\n        const xIsNext = props.next();\r\n\r\n        setIsClicked(!isClicked);\r\n        setIsHover(false);\r\n        setMark(xIsNext ? 'x' : 'o');\r\n\r\n        props.onClick(number);\r\n    }\r\n\r\n    function handleHover(hover){\r\n        if (isClicked) return;\r\n        var xIsNext =  props.next();\r\n\r\n        setIsHover(hover);\r\n        setMark(xIsNext ? 'x' : 'o');\r\n    }\r\n\r\n    function renderMark() {\r\n        return (\r\n            <div className={'mark mark-' + (mark) + (isClicked ? ' mark-clicked' : isHover ? ' mark-hover' : '')}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={'cell' + (' ' + props.classes.join(' '))}\r\n        onClick={() => handleClick(props.number)}\r\n        onMouseEnter={() => handleHover(true)}\r\n        onMouseLeave={() => handleHover(false)}\r\n      >\r\n        {renderMark()}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from 'react';\r\nimport Cell from '../Cell/Cell';\r\nimport \"./Board.css\";\r\n\r\nfunction Board(props) {\r\n\r\n    function renderCell(number, classes) {\r\n        return (<Cell\r\n                classes = {classes}\r\n                value = {props.square[number]}\r\n                number = {number}\r\n                next = {() => props.next()}\r\n                onClick = {() => props.onClick()}\r\n            />);\r\n    }\r\n\r\n    function renderCells() {\r\n        var len = Math.sqrt(props.square.length);\r\n        const squares = [];\r\n        for (let i = 0; i < props.square.length; i++)\r\n            squares.push(renderCell(i, generateClasses(i + 1, len)));\r\n        return squares;\r\n    }\r\n\r\n    function generateClasses(position, length) {\r\n        var classes = [];\r\n        var pos = (position) % length;\r\n        if (pos === 1) classes.push('cell-left');\r\n        if (pos === 0) classes.push('cell-right');\r\n        if (position <= length) classes.push('cell-top');\r\n        if (position > (length * (length - 1))) classes.push('cell-bottom');\r\n        return classes;\r\n    }\r\n\r\n    const gridStyle = {\r\n        gridTemplate: 'repeat(' + Math.sqrt(props.square.length) + ', min-content) / repeat(' + Math.sqrt(props.square.length) + ', min-content)'\r\n    };\r\n\r\n    return (\r\n        <div className=\"board\" style={gridStyle}>\r\n            {renderCells()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport Board from '../Board/Board';\r\nimport \"./Game.css\";\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            xIsNext: true,\r\n            historyState: 0\r\n        }\r\n    }\r\n\r\n    next() {\r\n        return this.state.xIsNext;\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.historyState + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            historyState: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.historyState];\r\n\r\n\r\n        return (\r\n            <div className='container'>\r\n                <h1 class=\"title\">TIC TAC TOE</h1>\r\n                <Board\r\n                    square={current.squares}\r\n                    next={() => this.next()}\r\n                    onClick={(i) => this.handleClick(i)}\r\n                />\r\n                <div class=\"endgame\">\r\n                    <span class=\"msg msg--o-win\">You lost to a stylesheet!</span>\r\n                    <span class=\"msg msg--draw\">Draw!</span>\r\n                    <button class=\"endgame-newgame\" type=\"reset\">Try again</button>\r\n                </div>\r\n    \r\n                <div class=\"bar\">\r\n                    <button class=\"newgame\" type=\"reset\">New game</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game/Game';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}